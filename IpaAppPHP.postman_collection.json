{
	"info": {
		"_postman_id": "7ce6c98c-79c5-45f3-adad-092ac071f0bf",
		"name": "IpaAppPHP",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34625484"
	},
	"item": [
		{
			"name": "features",
			"item": [
				{
					"name": "getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/featuresCRUD/getAll.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"featuresCRUD",
								"getAll.php"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "getByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/featuresCRUD/getByID.php?id=1",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"featuresCRUD",
								"getByID.php"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "weight",
									"value": "test",
									"type": "text"
								},
								{
									"key": "dimensions",
									"value": "test",
									"type": "text"
								},
								{
									"key": "OS",
									"value": "test",
									"type": "text"
								},
								{
									"key": "screensize",
									"value": "test",
									"type": "text"
								},
								{
									"key": "resolution",
									"value": "test",
									"type": "text"
								},
								{
									"key": "CPU",
									"value": "test",
									"type": "text"
								},
								{
									"key": "RAM",
									"value": "test",
									"type": "text"
								},
								{
									"key": "storage",
									"value": "test",
									"type": "text"
								},
								{
									"key": "battery",
									"value": "test",
									"type": "text"
								},
								{
									"key": "rear_camera",
									"value": "test",
									"type": "text"
								},
								{
									"key": "front_camera",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/featuresCRUD/create.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"featuresCRUD",
								"create.php"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "100g",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/featuresCRUD/edit.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"featuresCRUD",
								"edit.php"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "26",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/featuresCRUD/delete.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"featuresCRUD",
								"delete.php"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "id",
								"value": "26"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "26",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/usersCRUD/delete.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"usersCRUD",
								"delete.php"
							],
							"query": [
								{
									"key": "id",
									"value": "26",
									"disabled": true
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "10",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "mili",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/usersCRUD/edit.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"usersCRUD",
								"edit.php"
							],
							"query": [
								{
									"key": "id",
									"value": "25",
									"disabled": true
								},
								{
									"key": "firstname",
									"value": "jesus",
									"disabled": true
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "firstname",
									"value": "test",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "test",
									"type": "text"
								},
								{
									"key": "role",
									"value": "test",
									"type": "text"
								},
								{
									"key": "username",
									"value": "test",
									"type": "text"
								},
								{
									"key": "password",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/usersCRUD/create.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"usersCRUD",
								"create.php"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/usersCRUD/getAll.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"usersCRUD",
								"getAll.php"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "getByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "id",
								"value": "10",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "23",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/usersCRUD/getByID.php?id=10",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"usersCRUD",
								"getByID.php"
							],
							"query": [
								{
									"key": "id",
									"value": "10"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.126.247/androidAppIpa/productsCRUD/getAll.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"126",
								"247"
							],
							"path": [
								"androidAppIpa",
								"productsCRUD",
								"getAll.php"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "getByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.126.247/androidAppIpa/productsCRUD/getByID.php?id=80",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"126",
								"247"
							],
							"path": [
								"androidAppIpa",
								"productsCRUD",
								"getByID.php"
							],
							"query": [
								{
									"key": "id",
									"value": "80"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "product_name",
									"value": "test",
									"type": "text"
								},
								{
									"key": "product_model",
									"value": "test",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "test",
									"type": "text"
								},
								{
									"key": "price",
									"value": "1",
									"type": "text"
								},
								{
									"key": "stock_on_hand",
									"value": "1",
									"type": "text"
								},
								{
									"key": "img_url",
									"value": "test",
									"type": "text"
								},
								{
									"key": "feature_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.126.247/androidAppIpa/productsCRUD/create.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"126",
								"247"
							],
							"path": [
								"androidAppIpa",
								"productsCRUD",
								"create.php"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "80",
									"type": "text"
								},
								{
									"key": "product_name",
									"value": "xbox controller",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.126.247/androidAppIpa/productsCRUD/edit.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"126",
								"247"
							],
							"path": [
								"androidAppIpa",
								"productsCRUD",
								"edit.php"
							],
							"query": [
								{
									"key": "id",
									"value": "80",
									"disabled": true
								},
								{
									"key": "product_",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "81",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.126.247/androidAppIpa/productsCRUD/delete.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"126",
								"247"
							],
							"path": [
								"androidAppIpa",
								"productsCRUD",
								"delete.php"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/ordersCRUD/getAll.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"ordersCRUD",
								"getAll.php"
							],
							"query": [
								{
									"key": "order_number",
									"value": "26",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getByIDFullDetails",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/ordersCRUD/getByID.php?order_number=26",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"ordersCRUD",
								"getByID.php"
							],
							"query": [
								{
									"key": "order_number",
									"value": "26"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "order_number",
									"value": "27",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.100/androidAppIpa/ordersCRUD/delete.php",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"100"
							],
							"path": [
								"androidAppIpa",
								"ordersCRUD",
								"delete.php"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "username",
						"value": "nuevo1",
						"disabled": true
					},
					{
						"key": "password",
						"value": "abc123",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "nuevo1",
							"type": "text"
						},
						{
							"key": "password",
							"value": "abc123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://192.168.1.100/androidAppIpa/login.php",
					"protocol": "http",
					"host": [
						"192",
						"168",
						"1",
						"100"
					],
					"path": [
						"androidAppIpa",
						"login.php"
					],
					"query": [
						{
							"key": "username",
							"value": "nuevo1",
							"disabled": true
						},
						{
							"key": "password",
							"value": "abc123",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}